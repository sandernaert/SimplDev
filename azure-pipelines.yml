trigger:
- master
jobs:
# - job: Linux
#   pool:
#     vmImage: 'Ubuntu 16.04'
#   steps:
#   - task: DotNetCoreInstaller@2
#     inputs:
#       packageType: 'sdk'
#       version: '2.2.401'
#   - script: dotnet build ./SimplCommerce.sln
#     displayName: 'dotnet build'
#   - script: ./run-tests.sh
#     displayName: 'run tests'
#   - task: PublishTestResults@2
#     displayName: 'Publish Test Results **/*.trx'
#     condition: succeededOrFailed()
#     inputs:
#       testResultsFormat: VSTest
#       testResultsFiles: '**/*.trx' 
# - job: macOS
#   pool:
#     vmImage: 'macOS-10.13'
#   steps:
#   - task: DotNetCoreInstaller@0
#     inputs:
#       packageType: 'sdk'
#       version: '2.2.401'
#   - script: dotnet build ./SimplCommerce.sln
#     displayName: 'dotnet build'
#   - script: ./run-tests.sh
#     displayName: 'run tests'
#   - task: PublishTestResults@2
#     displayName: 'Publish Test Results **/*.trx'
#     condition: succeededOrFailed()
#     inputs:
#       testResultsFormat: VSTest
#       testResultsFiles: '**/*.trx' 
# - job: Windows
#   pool:
#     vmImage: 'windows-2019'
#   steps:
#   - task: DotNetCoreInstaller@0
#     inputs:
#       packageType: 'sdk'
#       version: '2.2.401'
#   - script: dotnet build ./SimplCommerce.sln
#     displayName: 'dotnet build'
#   - task: PowerShell@2
#     inputs:
#       filePath: .\run-tests.ps1
#     displayName: 'run tests'
#   - task: PublishTestResults@2
#     displayName: 'Publish Test Results **/*.trx'
#     condition: succeededOrFailed()
#     inputs:
#       testResultsFormat: VSTest
#       testResultsFiles: '**/*.trx' 
- job: LinuxRelease
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    buildConfiguration: 'Release'
  steps:
  - task: DotNetCoreInstaller@2
    inputs:
      packageType: 'sdk'
      version: '2.2.401'
  - script: dotnet build --configuration $(buildConfiguration) -o $(build.artifactstagingdirectory)
    displayName: 'dotnet build $(buildConfiguration)'
  - script: ./run-tests.sh
    displayName: 'run tests'    
  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/*.trx'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx' 
  # - task: CopyFiles@2
  #   inputs:
  #     sourceFolder: $(system.defaultworkingdirectory)
  #     contents: '**/bin/$(buildConfiguration)/**' 
  #     targetFolder: $(Build.ArtifactStagingDirectory)
  #     #cleanTargetFolder: false # Optional
  #     #overWrite: false # Optional
  #     #flattenFolders: false # Optional
  - task: PublishBuildArtifacts@1    
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'